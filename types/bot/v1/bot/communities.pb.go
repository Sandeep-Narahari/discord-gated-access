// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: v1/bot/communities.proto

package AutonomyNetwork

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Gated Communities Based on NFT
type Community struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DiscordCategoryId   string `protobuf:"bytes,2,opt,name=discord_category_id,json=discordCategoryId,proto3" json:"discord_category_id,omitempty"`
	DiscordCategoryName string `protobuf:"bytes,3,opt,name=discord_category_name,json=discordCategoryName,proto3" json:"discord_category_name,omitempty"`
	AccessRoleId        string `protobuf:"bytes,4,opt,name=access_role_id,json=accessRoleId,proto3" json:"access_role_id,omitempty"`
	AccessRoleName      string `protobuf:"bytes,5,opt,name=access_role_name,json=accessRoleName,proto3" json:"access_role_name,omitempty"`
	Approved            bool   `protobuf:"varint,6,opt,name=approved,proto3" json:"approved,omitempty"`
	GatedCollectionId   string `protobuf:"bytes,7,opt,name=gated_collection_id,json=gatedCollectionId,proto3" json:"gated_collection_id,omitempty"`
	FtAccess            bool   `protobuf:"varint,8,opt,name=ft_access,json=ftAccess,proto3" json:"ft_access,omitempty"`
	FtAmount            string `protobuf:"bytes,9,opt,name=ft_amount,json=ftAmount,proto3" json:"ft_amount,omitempty"`
	OwnerRoleId         string `protobuf:"bytes,10,opt,name=owner_role_id,json=ownerRoleId,proto3" json:"owner_role_id,omitempty"`
	OwnerRoleName       string `protobuf:"bytes,11,opt,name=owner_role_name,json=ownerRoleName,proto3" json:"owner_role_name,omitempty"`
	OwnerId             string `protobuf:"bytes,12,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *Community) Reset() {
	*x = Community{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_bot_communities_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Community) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Community) ProtoMessage() {}

func (x *Community) ProtoReflect() protoreflect.Message {
	mi := &file_v1_bot_communities_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Community.ProtoReflect.Descriptor instead.
func (*Community) Descriptor() ([]byte, []int) {
	return file_v1_bot_communities_proto_rawDescGZIP(), []int{0}
}

func (x *Community) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Community) GetDiscordCategoryId() string {
	if x != nil {
		return x.DiscordCategoryId
	}
	return ""
}

func (x *Community) GetDiscordCategoryName() string {
	if x != nil {
		return x.DiscordCategoryName
	}
	return ""
}

func (x *Community) GetAccessRoleId() string {
	if x != nil {
		return x.AccessRoleId
	}
	return ""
}

func (x *Community) GetAccessRoleName() string {
	if x != nil {
		return x.AccessRoleName
	}
	return ""
}

func (x *Community) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

func (x *Community) GetGatedCollectionId() string {
	if x != nil {
		return x.GatedCollectionId
	}
	return ""
}

func (x *Community) GetFtAccess() bool {
	if x != nil {
		return x.FtAccess
	}
	return false
}

func (x *Community) GetFtAmount() string {
	if x != nil {
		return x.FtAmount
	}
	return ""
}

func (x *Community) GetOwnerRoleId() string {
	if x != nil {
		return x.OwnerRoleId
	}
	return ""
}

func (x *Community) GetOwnerRoleName() string {
	if x != nil {
		return x.OwnerRoleName
	}
	return ""
}

func (x *Community) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

type CreateCommunityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDiscordId       string `protobuf:"bytes,1,opt,name=user_discord_id,json=userDiscordId,proto3" json:"user_discord_id,omitempty"`
	DiscordCategoryName string `protobuf:"bytes,2,opt,name=discord_category_name,json=discordCategoryName,proto3" json:"discord_category_name,omitempty"`
	AccessRoleName      string `protobuf:"bytes,3,opt,name=access_role_name,json=accessRoleName,proto3" json:"access_role_name,omitempty"`
	AccountAddress      string `protobuf:"bytes,4,opt,name=account_address,json=accountAddress,proto3" json:"account_address,omitempty"`
	GatedCollectionId   string `protobuf:"bytes,5,opt,name=gated_collection_id,json=gatedCollectionId,proto3" json:"gated_collection_id,omitempty"`
}

func (x *CreateCommunityRequest) Reset() {
	*x = CreateCommunityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_bot_communities_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommunityRequest) ProtoMessage() {}

func (x *CreateCommunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_bot_communities_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommunityRequest.ProtoReflect.Descriptor instead.
func (*CreateCommunityRequest) Descriptor() ([]byte, []int) {
	return file_v1_bot_communities_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCommunityRequest) GetUserDiscordId() string {
	if x != nil {
		return x.UserDiscordId
	}
	return ""
}

func (x *CreateCommunityRequest) GetDiscordCategoryName() string {
	if x != nil {
		return x.DiscordCategoryName
	}
	return ""
}

func (x *CreateCommunityRequest) GetAccessRoleName() string {
	if x != nil {
		return x.AccessRoleName
	}
	return ""
}

func (x *CreateCommunityRequest) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *CreateCommunityRequest) GetGatedCollectionId() string {
	if x != nil {
		return x.GatedCollectionId
	}
	return ""
}

type CreateCommunityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCommunityResponse) Reset() {
	*x = CreateCommunityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_bot_communities_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommunityResponse) ProtoMessage() {}

func (x *CreateCommunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_bot_communities_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommunityResponse.ProtoReflect.Descriptor instead.
func (*CreateCommunityResponse) Descriptor() ([]byte, []int) {
	return file_v1_bot_communities_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCommunityResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateCommunityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDiscordId    string `protobuf:"bytes,1,opt,name=user_discord_id,json=userDiscordId,proto3" json:"user_discord_id,omitempty"`
	GatedCommunityId int64  `protobuf:"varint,2,opt,name=gated_community_id,json=gatedCommunityId,proto3" json:"gated_community_id,omitempty"`
	Pending          bool   `protobuf:"varint,3,opt,name=pending,proto3" json:"pending,omitempty"`
}

func (x *UpdateCommunityRequest) Reset() {
	*x = UpdateCommunityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_bot_communities_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommunityRequest) ProtoMessage() {}

func (x *UpdateCommunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_bot_communities_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommunityRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommunityRequest) Descriptor() ([]byte, []int) {
	return file_v1_bot_communities_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCommunityRequest) GetUserDiscordId() string {
	if x != nil {
		return x.UserDiscordId
	}
	return ""
}

func (x *UpdateCommunityRequest) GetGatedCommunityId() int64 {
	if x != nil {
		return x.GatedCommunityId
	}
	return 0
}

func (x *UpdateCommunityRequest) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

type UpdateCommunityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateCommunityResponse) Reset() {
	*x = UpdateCommunityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_bot_communities_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommunityResponse) ProtoMessage() {}

func (x *UpdateCommunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_bot_communities_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommunityResponse.ProtoReflect.Descriptor instead.
func (*UpdateCommunityResponse) Descriptor() ([]byte, []int) {
	return file_v1_bot_communities_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCommunityResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCommunitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCommunitiesRequest) Reset() {
	*x = GetCommunitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_bot_communities_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunitiesRequest) ProtoMessage() {}

func (x *GetCommunitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_bot_communities_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunitiesRequest.ProtoReflect.Descriptor instead.
func (*GetCommunitiesRequest) Descriptor() ([]byte, []int) {
	return file_v1_bot_communities_proto_rawDescGZIP(), []int{5}
}

type GetCommunitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Communities []*Community `protobuf:"bytes,1,rep,name=communities,proto3" json:"communities,omitempty"`
}

func (x *GetCommunitiesResponse) Reset() {
	*x = GetCommunitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_bot_communities_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunitiesResponse) ProtoMessage() {}

func (x *GetCommunitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_bot_communities_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunitiesResponse.ProtoReflect.Descriptor instead.
func (*GetCommunitiesResponse) Descriptor() ([]byte, []int) {
	return file_v1_bot_communities_proto_rawDescGZIP(), []int{6}
}

func (x *GetCommunitiesResponse) GetCommunities() []*Community {
	if x != nil {
		return x.Communities
	}
	return nil
}

type GetCommunityByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCommunityByIDRequest) Reset() {
	*x = GetCommunityByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_bot_communities_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityByIDRequest) ProtoMessage() {}

func (x *GetCommunityByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_bot_communities_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityByIDRequest.ProtoReflect.Descriptor instead.
func (*GetCommunityByIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_bot_communities_proto_rawDescGZIP(), []int{7}
}

func (x *GetCommunityByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCommunityByCollectionIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollectionId string `protobuf:"bytes,1,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
}

func (x *GetCommunityByCollectionIdRequest) Reset() {
	*x = GetCommunityByCollectionIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_bot_communities_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityByCollectionIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityByCollectionIdRequest) ProtoMessage() {}

func (x *GetCommunityByCollectionIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_bot_communities_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityByCollectionIdRequest.ProtoReflect.Descriptor instead.
func (*GetCommunityByCollectionIdRequest) Descriptor() ([]byte, []int) {
	return file_v1_bot_communities_proto_rawDescGZIP(), []int{8}
}

func (x *GetCommunityByCollectionIdRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

type GetCommunityByNFTRoleIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessRoleId string `protobuf:"bytes,1,opt,name=access_role_id,json=accessRoleId,proto3" json:"access_role_id,omitempty"`
}

func (x *GetCommunityByNFTRoleIdRequest) Reset() {
	*x = GetCommunityByNFTRoleIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_bot_communities_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityByNFTRoleIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityByNFTRoleIdRequest) ProtoMessage() {}

func (x *GetCommunityByNFTRoleIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_bot_communities_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityByNFTRoleIdRequest.ProtoReflect.Descriptor instead.
func (*GetCommunityByNFTRoleIdRequest) Descriptor() ([]byte, []int) {
	return file_v1_bot_communities_proto_rawDescGZIP(), []int{9}
}

func (x *GetCommunityByNFTRoleIdRequest) GetAccessRoleId() string {
	if x != nil {
		return x.AccessRoleId
	}
	return ""
}

type GetCommunityByDiscordCategoryIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscordCategoryId string `protobuf:"bytes,1,opt,name=discord_category_id,json=discordCategoryId,proto3" json:"discord_category_id,omitempty"`
}

func (x *GetCommunityByDiscordCategoryIDRequest) Reset() {
	*x = GetCommunityByDiscordCategoryIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_bot_communities_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityByDiscordCategoryIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityByDiscordCategoryIDRequest) ProtoMessage() {}

func (x *GetCommunityByDiscordCategoryIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_bot_communities_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityByDiscordCategoryIDRequest.ProtoReflect.Descriptor instead.
func (*GetCommunityByDiscordCategoryIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_bot_communities_proto_rawDescGZIP(), []int{10}
}

func (x *GetCommunityByDiscordCategoryIDRequest) GetDiscordCategoryId() string {
	if x != nil {
		return x.DiscordCategoryId
	}
	return ""
}

type GetCommunityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Community *Community `protobuf:"bytes,1,opt,name=community,proto3" json:"community,omitempty"`
}

func (x *GetCommunityResponse) Reset() {
	*x = GetCommunityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_bot_communities_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityResponse) ProtoMessage() {}

func (x *GetCommunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_bot_communities_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityResponse.ProtoReflect.Descriptor instead.
func (*GetCommunityResponse) Descriptor() ([]byte, []int) {
	return file_v1_bot_communities_proto_rawDescGZIP(), []int{11}
}

func (x *GetCommunityResponse) GetCommunity() *Community {
	if x != nil {
		return x.Community
	}
	return nil
}

var File_v1_bot_communities_proto protoreflect.FileDescriptor

var file_v1_bot_communities_proto_rawDesc = []byte{
	0x0a, 0x18, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x76, 0x31, 0x2e, 0x62,
	0x6f, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xbc, 0x03, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x66, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xf7, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x67, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22,
	0x29, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x79, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x79, 0x4e, 0x46, 0x54, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x58, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x42,
	0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x32, 0xb9, 0x07, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x73, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x2e, 0x76, 0x31,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x76, 0x31,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x12, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x1a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x65, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x70, 0x0a, 0x0d, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x76, 0x31, 0x2e,
	0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x31,
	0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9a, 0x01, 0x0a, 0x17,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x6f, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x79, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x2f, 0x7b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x90, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x79, 0x4e, 0x46, 0x54, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x26, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x79, 0x4e, 0x46, 0x54, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x62,
	0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12,
	0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x62,
	0x79, 0x5f, 0x6e, 0x66, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x7b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xb0, 0x01, 0x0a, 0x1c,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x2e, 0x2e, 0x76,
	0x31, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x42, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x76,
	0x31, 0x2e, 0x62, 0x6f, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x2f, 0x7b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x50,
	0x5a, 0x4e, 0x2f, 0x68, 0x6f, 0x6d, 0x65, 0x2f, 0x73, 0x61, 0x6e, 0x64, 0x65, 0x65, 0x70, 0x2f,
	0x67, 0x6f, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x41, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x41, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_bot_communities_proto_rawDescOnce sync.Once
	file_v1_bot_communities_proto_rawDescData = file_v1_bot_communities_proto_rawDesc
)

func file_v1_bot_communities_proto_rawDescGZIP() []byte {
	file_v1_bot_communities_proto_rawDescOnce.Do(func() {
		file_v1_bot_communities_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_bot_communities_proto_rawDescData)
	})
	return file_v1_bot_communities_proto_rawDescData
}

var file_v1_bot_communities_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_v1_bot_communities_proto_goTypes = []interface{}{
	(*Community)(nil),                              // 0: v1.bot.Community
	(*CreateCommunityRequest)(nil),                 // 1: v1.bot.CreateCommunityRequest
	(*CreateCommunityResponse)(nil),                // 2: v1.bot.CreateCommunityResponse
	(*UpdateCommunityRequest)(nil),                 // 3: v1.bot.UpdateCommunityRequest
	(*UpdateCommunityResponse)(nil),                // 4: v1.bot.UpdateCommunityResponse
	(*GetCommunitiesRequest)(nil),                  // 5: v1.bot.GetCommunitiesRequest
	(*GetCommunitiesResponse)(nil),                 // 6: v1.bot.GetCommunitiesResponse
	(*GetCommunityByIDRequest)(nil),                // 7: v1.bot.GetCommunityByIDRequest
	(*GetCommunityByCollectionIdRequest)(nil),      // 8: v1.bot.GetCommunityByCollectionIdRequest
	(*GetCommunityByNFTRoleIdRequest)(nil),         // 9: v1.bot.GetCommunityByNFTRoleIdRequest
	(*GetCommunityByDiscordCategoryIDRequest)(nil), // 10: v1.bot.GetCommunityByDiscordCategoryIDRequest
	(*GetCommunityResponse)(nil),                   // 11: v1.bot.GetCommunityResponse
}
var file_v1_bot_communities_proto_depIdxs = []int32{
	0,  // 0: v1.bot.GetCommunitiesResponse.communities:type_name -> v1.bot.Community
	0,  // 1: v1.bot.GetCommunityResponse.community:type_name -> v1.bot.Community
	1,  // 2: v1.bot.CommunityServices.CreateCommunity:input_type -> v1.bot.CreateCommunityRequest
	3,  // 3: v1.bot.CommunityServices.UpdateCommunity:input_type -> v1.bot.UpdateCommunityRequest
	5,  // 4: v1.bot.CommunityServices.Communities:input_type -> v1.bot.GetCommunitiesRequest
	7,  // 5: v1.bot.CommunityServices.CommunityById:input_type -> v1.bot.GetCommunityByIDRequest
	8,  // 6: v1.bot.CommunityServices.CommunityByCollectionId:input_type -> v1.bot.GetCommunityByCollectionIdRequest
	9,  // 7: v1.bot.CommunityServices.CommunityByNFTRoleId:input_type -> v1.bot.GetCommunityByNFTRoleIdRequest
	10, // 8: v1.bot.CommunityServices.CommunityByDiscordCategoryID:input_type -> v1.bot.GetCommunityByDiscordCategoryIDRequest
	2,  // 9: v1.bot.CommunityServices.CreateCommunity:output_type -> v1.bot.CreateCommunityResponse
	4,  // 10: v1.bot.CommunityServices.UpdateCommunity:output_type -> v1.bot.UpdateCommunityResponse
	6,  // 11: v1.bot.CommunityServices.Communities:output_type -> v1.bot.GetCommunitiesResponse
	11, // 12: v1.bot.CommunityServices.CommunityById:output_type -> v1.bot.GetCommunityResponse
	11, // 13: v1.bot.CommunityServices.CommunityByCollectionId:output_type -> v1.bot.GetCommunityResponse
	11, // 14: v1.bot.CommunityServices.CommunityByNFTRoleId:output_type -> v1.bot.GetCommunityResponse
	11, // 15: v1.bot.CommunityServices.CommunityByDiscordCategoryID:output_type -> v1.bot.GetCommunityResponse
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_v1_bot_communities_proto_init() }
func file_v1_bot_communities_proto_init() {
	if File_v1_bot_communities_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_bot_communities_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Community); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_bot_communities_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommunityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_bot_communities_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommunityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_bot_communities_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommunityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_bot_communities_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommunityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_bot_communities_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_bot_communities_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_bot_communities_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_bot_communities_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityByCollectionIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_bot_communities_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityByNFTRoleIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_bot_communities_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityByDiscordCategoryIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_bot_communities_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_bot_communities_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_bot_communities_proto_goTypes,
		DependencyIndexes: file_v1_bot_communities_proto_depIdxs,
		MessageInfos:      file_v1_bot_communities_proto_msgTypes,
	}.Build()
	File_v1_bot_communities_proto = out.File
	file_v1_bot_communities_proto_rawDesc = nil
	file_v1_bot_communities_proto_goTypes = nil
	file_v1_bot_communities_proto_depIdxs = nil
}
